#summary How to build and install HeeksCAD and related projects for Ubuntu

HeeksCAD is still under heavy development so any packages you find are likely to be out of date.  To get the most current version, you need to compile the current source version from SVN.

This installation procedure was tested on Ubuntu 10.04 (Lucid Lynx) 

If you run into problems, check the notes and comments at the end of this page.
=For Ubuntu 10.10 only=
The version of cmake in Ubuntu 10.10 is 2.8.2. Cmake 2.8.2 has a bug that will prevent HeeksCAD and HeeksCNC from installing.  You will need to use a newer (or older) version of cmake. 

Do the following:
 # On the menubar at the top of the screen, choose System|Administration|Synaptic Package Manager
 # In Synaptic: From the menu, choose Settings|Repositories
 # Click on the Updates tab, and check the box for "unsupported updates (maverick-backports)"
 # Click the close button
 # Click Reload
 # Type `cmake` in the search box
 # Scroll through the list until you find cmake. 
 # Click the box, and on the popup menu, choose "Mark for installation"
 # In the window that appears, click Mark
 # Click apply
 # When it finishes, repeat steps 2 - 5, but in step 3 clear the checkbox
 # Close Synaptic

=For Ubuntu 8.04 only=
The opencascade libraries are not in the ubuntu multiverse for Hardy.  You can get them from opennovation.

First add the following to your /etc/apt/sources.list file
{{{
deb http://www.opennovation.org/ubuntu hardy main contrib non-free
}}}

Download the signing key available here
[http://www.opennovation.org/ubuntu/opennovation.key]

Go into synaptic.  Click the Settings -> repositories menu.
Click the 'authentication' tab and import the key file you just downloaded.


=Install the dependencies=

The following command will install the required packages.  apt-get will prompt you to accept a large number of additional dependencies.  Accept them as well.

{{{
sudo apt-get install subversion libwxbase2.8-dev g++ build-essential libopencascade-dev libwxgtk2.8-dev libgtkglext1-dev python-dev cmake libboost-python-dev
}}}

Get a cup of coffee while all this downloads and installs.

=Install HeeksCAD (using cmake)=
The following bit of script will download the source files, compile, and install HeeksCAD.
It will create a HeeksCAD directory in your home directory.  If you don't want it there, modify the script appropriately.

{{{
#Get the source files from the SVN repository, build and install
cd ~
svn checkout http://heekscad.googlecode.com/svn/trunk/ HeeksCAD
cd ~/HeeksCAD
cmake .
make package
sudo dpkg -i heekscad_beta*
}}} 

=Install HeeksCAD (the old way)=
The following bit of script will download the source files, compile, and install HeeksCAD.
It will create a HeeksCAD directory in your home directory.  If you don't want it there, modify the script appropriately.

{{{
#Get the source files from the SVN repository, build and install
cd ~
svn checkout http://heekscad.googlecode.com/svn/trunk/ HeeksCAD
cd ~/HeeksCAD/src
make -f Makefile.old clean
make
sudo make -f Makefile.old install
}}} 

At this point, HeeksCAD is installed and will run if launched from a command line.  The application launcher in in the menu, however, will give an error because it's looking in the wrong place for the binary.  The following commands will create symbolic links to resolve this.

{{{
sudo ln -s /usr/local/bin/HeeksCAD /usr/bin/HeeksCAD
}}}

Make HeeksCAD find the program icons

{{{
sudo ln -s /usr/local/share/heekscad/ /usr/share/heekscad
}}}

=Install HeeksCNC (with cmake)=

{{{
#Get the HeeksCNC files from the SVN repository, build, and install
cd ~/HeeksCAD/
svn checkout http://heekscnc.googlecode.com/svn/trunk/ HeeksCNC
cd ~/HeeksCAD/HeeksCNC/
cmake .
make package
sudo dpkg -i heekscnc_beta*.deb  #only one .deb to install, but the filename may change
}}}

=Install HeeksCNC (the old way)=

{{{
#Get the HeeksCNC files from the SVN repository, build, and install
cd ~/HeeksCAD/
svn checkout http://heekscnc.googlecode.com/svn/trunk/ HeeksCNC
cd ~/HeeksCAD/HeeksCNC/src
make clean
make
sudo make install
#optional, for profile operations: build and install Kurve
cd ~/HeeksCAD/HeeksCNC/kurve
make clean
make
sudo make install
}}}

==Install the helper libraries==
HeeksCNC uses a number of libraries to perform various operations.  Install all of them or only the ones you plan to use.

===Install libarea===

area.so is required for pocket operations.

{{{
#Get the libarea files from the SVN repository, build, and install
cd ~/HeeksCAD/HeeksCNC/
svn checkout http://libarea.googlecode.com/svn/trunk/ libarea
cd ~/HeeksCAD/HeeksCNC/libarea/
make clean
make
sudo make install
}}}


===Install libactp===

actp.so is required for adaptive roughing operations.

{{{
#Get the libactp (adaptive roughing) files from the SVN repository, build, and install
cd ~/HeeksCAD/HeeksCNC/
svn checkout http://libactp.googlecode.com/svn/trunk/ libactp
cd ~/HeeksCAD/HeeksCNC/libactp/PythonLib
make clean
make
sudo make install
}}}

===Install opencamlib===

opencamlib is the replacement for pycam.  It's required for zigzag operations.

{{{
#Get the opencamlib files from the SVN repository, build, and install
cd ~/HeeksCAD/HeeksCNC/
svn checkout http://opencamlib.googlecode.com/svn/trunk/ opencamlib
cd ~/HeeksCAD/HeeksCNC/opencamlib/src
make clean
cmake .
make
sudo make install
}}}

==Activate the HeeksCNC plugin==

Launch HeeksCAD.

Under the 'File' menu click 'plugins'

When the dialog box appears, click 'new' 

Name it HeeksCNC and click "..." 
 * If you built HeeksCNC with cmake and/or installed from a .deb:
  * find libheekscnc.so under /usr/lib
 * If you built HeeksCNC with the old Makefile:
  * find libheekscnc.so.0.5.1 under /usr/local/lib/heekscnc/
Click 'ok' out and restart HeeksCAD.  You should now have a 'Machining' menu and a new toolbar with the machining icons.


=Other Notes=
==use with default theme 'ambience'==
If you are using the default Lucid theme (Ambience).
The following bug and work-around affect the appearance of HeeksCAD in the default theme:

http://code.google.com/p/heekscad/issues/detail?id=270

==Making it go fast==
As noted above, HeeksCAD is changing all the time.  The bits of script above can be combined into one script and executed together with sudo.  

Here's a complete script as submitted in the comments below.  I've added a 'make clean' for each step.  I'm not sure what effect this has on the efficiency, but without it, you can't be guaranteed a clean rebuild.

{{{
#!/bin/sh
# heekscad-install.sh -- Downloads, builds and installs HeeksCAD from svn

BUILDPATH=~             # Location of HeeksCAD build dir
INSTALLPATH=/usr/local  # Location to install HeeksCAD
BUILDPREREQS="subversion libwxbase2.8-dev \
  build-essential libopencascade-dev libwxgtk2.8-dev \
  libgtkglext1-dev python-dev cmake libboost-python-dev"

# Install build prerequisites
sudo apt-get install -y $BUILDPREREQS

cd $BUILDPATH
if [ -d HeeksCAD ]; then
  cd HeeksCAD
  svn update
else
  svn checkout http://heekscad.googlecode.com/svn/trunk/ HeeksCAD
fi
cd ${BUILDPATH}/HeeksCAD/src
make clean
make
sudo make install

# Make menu entry find the binary
sudo ln -s ${INSTALLPATH}/bin/HeeksCAD /usr/bin/HeeksCAD
# Make HeeksCAD find the program icons
sudo ln -s ${INSTALLPATH}/share/heekscad/ /usr/share/heekscad

# Install HeeksCNC
#Get the HeeksCNC files from the SVN repository, build, and install
cd ${BUILDPATH}/HeeksCAD/
if [ -d HeeksCNC ]; then
  cd HeeksCNC
  svn update
else
  svn checkout http://heekscnc.googlecode.com/svn/trunk/ HeeksCNC
fi
cd ${BUILDPATH}/HeeksCAD/HeeksCNC/src
make clean 
make
sudo make install

# build, and install kurve
cd ${BUILDPATH}/HeeksCAD/HeeksCNC/kurve
make clean
make
sudo make install
sudo ln -s .libs/kurve.so ${BUILDPATH}/HeeksCAD/HeeksCNC/kurve.so

# Install libarea
# area.so is required for pocket operations.
#Get the libarea files from the SVN repository, build, and install
cd ${BUILDPATH}/HeeksCAD/HeeksCNC/
if [ -d libarea ]; then
  cd libarea
  svn update
else
  svn checkout http://libarea.googlecode.com/svn/trunk/ libarea
fi
cd ${BUILDPATH}/HeeksCAD/HeeksCNC/libarea/
make clean
make
sudo make install
sudo ln -s .libs/area.so ${BUILDPATH}/HeeksCAD/HeeksCNC/area.so

# Install libactp
# actp.so is required for adaptive roughing operations.
# Get the libactp (adaptive roughing) files from the SVN repository, build, and install
cd ${BUILDPATH}/HeeksCAD/HeeksCNC/
if [ -d libactp ]; then
  cd libactp
  svn update
else
  svn checkout http://libactp.googlecode.com/svn/trunk/ libactp
fi
cd ${BUILDPATH}/HeeksCAD/HeeksCNC/libactp/PythonLib
make clean
make
sudo make install
sudo ln -s .libs/actp.so ${BUILDPATH}/HeeksCAD/HeeksCNC/actp.so

# Install opencamlib
# opencamlib is the replacement for pycam. It's required for zigzag operations.
# Get the opencamlib files from the SVN repository, build, and install
cd ${BUILDPATH}/HeeksCAD/HeeksCNC/
if [ -d opencamlib ]; then
  cd opencamlib
  svn update
else
  svn checkout http://opencamlib.googlecode.com/svn/trunk/ opencamlib
fi
cd ${BUILDPATH}/HeeksCAD/HeeksCNC/opencamlib/src
make clean
cmake .
make
make doc        # Creates PDF file needed by make install
sudo make install

if test $(lsb_release -s -c) = 'hardy'; then
    echo This is Ubuntu Hardy, creating symlinks
    sudo ln -fs /usr/local/lib/python2.5/dist-packages/kurve.so /usr/local/lib/python2.5/site-packages/kurve.so
    sudo ln -fs /usr/local/lib/python2.5/dist-packages/actp.so /usr/local/lib/python2.5/site-packages/actp.so
    sudo ln -fs /usr/local/lib/python2.5/dist-packages/area.so /usr/local/lib/python2.5/site-packages/area.so
fi


}}}



===Earlier version of Ubuntu===
This affects at least 8.04(Hardy) and may affect other releases as well.  Earlier releases using Python2.5 will look for the module in a different directory.  Make the following symlinks to enable the modules
{{{
sudo ln -s /usr/local/lib/python2.5/dist-packages/kurve.so /usr/local/lib/python2.5/site-packages/kurve.so
sudo ln -s /usr/local/lib/python2.5/dist-packages/actp.so /usr/local/lib/python2.5/site-packages/actp.so
sudo ln -s /usr/local/lib/python2.5/dist-packages/area.so /usr/local/lib/python2.5/site-packages/area.so
}}}

==A possible problem==
If you get this error:
{{{
/opt/opencascade-6.3/ros/lin/inc/Standard_Stream.hxx: At global scope:
/opt/opencascade-6.3/ros/lin/inc/Standard_Stream.hxx:84: error: ‘std::setw’ has not been declared
/opt/opencascade-6.3/ros/lin/inc/Standard_Stream.hxx:85: error: ‘std::setprecision’ has not been declared
}}}
You need to add -DHAVE_IOMANIP to CCFLAGS in src/Makefile of HeeksCAD and HeeksCNC.